basePath: /
definitions:
  models.Todo:
    properties:
      completed:
        type: boolean
      created_at:
        type: string
      deleted:
        type: boolean
      deleted_at:
        type: string
      id:
        type: integer
      tasks:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  types.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  types.Payload:
    properties:
      tasks:
        type: string
      title:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a simple todo list API.
  title: Todo API
  version: "1.0"
paths:
  /todos:
    get:
      description: Get all todo lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: Get all todo lists
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create a new todo list with tasks
      parameters:
      - description: Todo list
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/types.Payload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Create a new todo list
      tags:
      - todos
  /todos/{id}:
    delete:
      description: Soft delete a todo list by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Soft delete a todo list by ID
      tags:
      - todos
    get:
      description: Get a todo list by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Get a todo list by ID
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update a todo list by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Todo list
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/types.Payload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Update a todo list by ID
      tags:
      - todos
  /todos/{id}/completed:
    patch:
      description: Mark a todo list as completed by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Mark a todo list as completed by ID
      tags:
      - todos
swagger: "2.0"
